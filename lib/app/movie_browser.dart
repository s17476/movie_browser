import 'package:flutter/material.dart';
import 'package:flutter_localizations/flutter_localizations.dart';
import 'package:responsive_framework/responsive_framework.dart';

import 'package:movie_browser/app/custom_multi_bloc_provider.dart';
import 'package:movie_browser/app/custom_router.dart';

class MovieBrowser extends StatelessWidget {
  const MovieBrowser({super.key});

  @override
  Widget build(BuildContext context) {
    return CustomMultiBlocProvider(
      child: GestureDetector(
        onTap: () {
          final focusScope = FocusScope.of(context);
          final focusNode = focusScope.focusedChild;
          if (!focusScope.hasPrimaryFocus && focusNode != null) {
            focusNode.unfocus();
          }
        },
        child: MaterialApp.router(
          title: 'Movie Browser',
          debugShowCheckedModeBanner: false,
          routerConfig: CustomRouter.routerConfig(),
          builder: (context, child) => ResponsiveWrapper.builder(
            child,
            defaultScale: true,
            breakpoints: const [
              ResponsiveBreakpoint.resize(350, name: MOBILE),
              ResponsiveBreakpoint.autoScale(600, name: TABLET),
              ResponsiveBreakpoint.autoScale(800, name: TABLET),
              ResponsiveBreakpoint.resize(1200, name: DESKTOP),
              ResponsiveBreakpoint.autoScale(2460, name: "4K"),
            ],
          ),
          theme: ThemeData(
            colorScheme: const ColorScheme.dark().copyWith(
              primary: Colors.amber.shade800,
              error: Colors.red.shade800,
            ),
            dialogBackgroundColor: Colors.grey.shade900,
            scaffoldBackgroundColor: Colors.black,
            appBarTheme: const AppBarTheme(
              backgroundColor: Colors.black26,
              elevation: 0.0,
            ),
          ),
          localizationsDelegates: const [
            GlobalMaterialLocalizations.delegate,
            GlobalWidgetsLocalizations.delegate,
            GlobalCupertinoLocalizations.delegate,
          ],
          supportedLocales: supportedLocales,
        ),
      ),
    );
  }

  final supportedLocales = const [
    Locale('an'),
    Locale('ak'),
    Locale('cr'),
    Locale('az'),
    Locale('cs'),
    Locale('aa'),
    Locale('br'),
    Locale('af'),
    Locale('bo'),
    Locale('ce'),
    Locale('kw'),
    Locale('fo'),
    Locale('la'),
    Locale('ng'),
    Locale('sc'),
    Locale('ti'),
    Locale('tn'),
    Locale('tr'),
    Locale('pa'),
    Locale('et'),
    Locale('fr'),
    Locale('ha'),
    Locale('is'),
    Locale('li'),
    Locale('ln'),
    Locale('ss'),
    Locale('ab'),
    Locale('sh'),
    Locale('eu'),
    Locale('fy'),
    Locale('ja'),
    Locale('oj'),
    Locale('or'),
    Locale('pi'),
    Locale('su'),
    Locale('th'),
    Locale('ig'),
    Locale('id'),
    Locale('kk'),
    Locale('ki'),
    Locale('ug'),
    Locale('ve'),
    Locale('rw'),
    Locale('mi'),
    Locale('nv'),
    Locale('hi'),
    Locale('pt'),
    Locale('sg'),
    Locale('sk'),
    Locale('sr'),
    Locale('ty'),
    Locale('xh'),
    Locale('ar'),
    Locale('co'),
    Locale('bi'),
    Locale('eo'),
    Locale('hz'),
    Locale('fi'),
    Locale('iu'),
    Locale('lv'),
    Locale('it'),
    Locale('nl'),
    Locale('kn'),
    Locale('sa'),
    Locale('sq'),
    Locale('tl'),
    Locale('lb'),
    Locale('ts'),
    Locale('ml'),
    Locale('vo'),
    Locale('zu'),
    Locale('os'),
    Locale('sm'),
    Locale('za'),
    Locale('bn'),
    Locale('cu'),
    Locale('ga'),
    Locale('gv'),
    Locale('hu'),
    Locale('jv'),
    Locale('kr'),
    Locale('km'),
    Locale('ky'),
    Locale('na'),
    Locale('nr'),
    Locale('oc'),
    Locale('ro'),
    Locale('ru'),
    Locale('hy'),
    Locale('ch'),
    Locale('xx'),
    Locale('ba'),
    Locale('gl'),
    Locale('io'),
    Locale('lu'),
    Locale('mh'),
    Locale('mg'),
    Locale('mo'),
    Locale('mn'),
    Locale('nd'),
    Locale('no'),
    Locale('pl'),
    Locale('sw'),
    Locale('tg'),
    Locale('to'),
    Locale('wa'),
    Locale('yi'),
    Locale('en'),
    Locale('as'),
    Locale('gd'),
    Locale('kl'),
    Locale('my'),
    Locale('qu'),
    Locale('sn'),
    Locale('uk'),
    Locale('fa'),
    Locale('ka'),
    Locale('gu'),
    Locale('av'),
    Locale('ae'),
    Locale('gn'),
    Locale('mt'),
    Locale('ne'),
    Locale('sv'),
    Locale('tt'),
    Locale('wo'),
    Locale('cn'),
    Locale('cv'),
    Locale('da'),
    Locale('dz'),
    Locale('ny'),
    Locale('rn'),
    Locale('st'),
    Locale('tk'),
    Locale('uz'),
    Locale('vi'),
    Locale('el'),
    Locale('ca'),
    Locale('cy'),
    Locale('de'),
    Locale('ks'),
    Locale('ms'),
    Locale('nb'),
    Locale('rm'),
    Locale('si'),
    Locale('es'),
    Locale('te'),
    Locale('tw'),
    Locale('ps'),
    Locale('bg'),
    Locale('mk'),
    Locale('ik'),
    Locale('ko'),
    Locale('lt'),
    Locale('om'),
    Locale('se'),
    Locale('so'),
    Locale('ta'),
    Locale('ur'),
    Locale('am'),
    Locale('bs'),
    Locale('dv'),
    Locale('ay'),
    Locale('bm'),
    Locale('ii'),
    Locale('ie'),
    Locale('kv'),
    Locale('ku'),
    Locale('nn'),
    Locale('zh'),
    Locale('he'),
    Locale('ee'),
    Locale('fj'),
    Locale('ff'),
    Locale('ht'),
    Locale('hr'),
    Locale('ia'),
    Locale('kj'),
    Locale('lo'),
    Locale('lg'),
    Locale('mr'),
    Locale('sd'),
    Locale('be'),
    Locale('ho'),
    Locale('kg'),
    Locale('sl'),
    Locale('yo'),
  ];
}
